<style lang="less">
</style>
<template>
  <view class="container">
    <Steps current="1">
      <Step title="资料上传" content=""></Step>
      <Step title="申请表填写" content=""></Step>
      <Step title="确认订单" content=""></Step>
    </Steps>
    <i-collapse simple style="width:100%;margin-top:30rpx">
      <i-collapse-item title="基本信息">
        <view slot="content">
          <view wx:if="{{ !!fields.country_cn }}">
            <text class="fieldLabel">国籍</text>
            <input placeholder="国籍" value="{{passport.data.country_cn}}" bindinput="oninputNationality" type="text"/>
          </view>
          <view wx:if="{{ !!fields.name_cn }}">
            <text class="fieldLabel">姓名</text>
            <input value="{{passport.name_cn}}" bindinput="oninputNamecn" type="text"/>
          </view>
          <view wx:if="{{ !!fields.name }}">
            <text class="fieldLabel">姓名(拼音)</text>
            <input value="{{passport.name}}" bindinput="oninputName" type="text"/>
          </view>
          <view wx:if="{{ !!fields.sex }}">
            <text class="fieldLabel">性别</text>
            <radio-group class="radio-group" bindchange="radioChange">
              <label class="radio"><radio value="M" checked="{{passport.data.sex == 'M'}}"/> 男 </label>
              <label class="radio"><radio value="F" checked="{{passport.data.sex != 'M'}}"/> 女 </label>
            </radio-group>
          </view>
          <view wx:if="{{ !!fields.birth_date }}">
            <picker mode="date" value="{{passport.data.birth_date}}" end="{{today}}" @change="bindBirthChange">
              <text class="fieldLabel">出生日期 </text><text>{{birthDate}}</text>
            </picker>
          </view>
          <view wx:if="{{ !!fields.birth_place_cn }}">
            <text class="fieldLabel">出生地</text>
            <input value="{{passport.data.birth_place_cn}}" bindinput="oninputName" type="text"/>
          </view>
          <view wx:if="{{ !!fields.birth_place }}">
            <text class="fieldLabel">出生地(拼音)</text>
            <input value="{{passport.data.birth_place}}" bindinput="oninputName" type="text"/>
          </view>
          <view wx:if="{{ !!fields.job_type }}">
            <picker mode="selector" value="{{passport.data.job_type}}" range="{{jobs}}" @change="onJobTypeChange">
              <view class="picker">
                <text class="fieldLabel">职业 </text>{{jobTypeDisplay}}
              </view>
            </picker>
          </view>
          <view wx:if="{{passport.data.job_type == 2}}">
            <view wx:if="{{!!fields.job_comp_cn}}">
              <text class="fieldLabel">单位名称</text>
              <input  value="{{passport.data.job_comp_cn}}" bindinput="onJobCompChange" type="text"/>
            </view>
            <view wx:if="{{!!fields.job_title_cn}}">
              <text class="fieldLabel">职位名称</text>
              <input value="{{passport.data.job_title_cn}}" bindinput="onJobTitleChangeCn" type="text"/>
            </view>
            <view wx:if="{{!!fields.job_title}}">
              <text class="fieldLabel">职位名称(英文)</text>
              <input placeholder="选填可空" value="{{passport.data.job_title}}" bindinput="onJobTitleChange" type="text"/>
            </view>
          </view>
          <view wx:if="{{passport.data.job_type == 0}}">
            <view wx:if="{{!!fields.job_comp_cn}}">
              <text class="fieldLabel">学校名称</text>
              <input  value="{{passport.data.job_comp_cn}}" bindinput="onJobCompChange" type="text"/>
            </view>
          </view>
          <view wx:if="{{passport.data.job_type == 4}}">
            <view wx:if="{{!!fields.job_title_cn}}">
              <text class="fieldLabel">职业描述</text>
              <input placeholder="当前职业的具体描述" value="{{passport.data.job_title_cn}}" bindinput="onJobTitleChangeCn" type="text"/>
            </view>
            <view wx:if="{{!!fields.job_title}}">
              <text class="fieldLabel">职业描述(英文)</text>
              <input placeholder="选填可空" value="{{passport.data.job_title}}" bindinput="onJobTitleChange" type="text"/>
            </view>
          </view>
          <view wx:if="{{!!filesUrls}}">
            <text class="fieldLabel">图片资料</text>
            <view wx:for="{{filesUrls}}" wx:for-item="url" wx:key="*this">
              <image src="{{url}}" @tap="previewImages"></image>
            </view>
          </view>
        </view>
      </i-collapse-item>
      <i-collapse-item title="护照信息">
        <view slot="content">
          <view wx:if="{{!!fields.passport_no}}">
            <text class="fieldLabel">护照号码</text>
            <input placeholder="护照号码" value="{{passport.passport_no}}" bindinput="oninputPassport" type="text"/>
          </view>
          <view wx:if="{{!!fields.authority}}">
            <text class="fieldLabel">颁发机构(英文)</text>
            <input placeholder="确保与护照一致" name="authority" value="{{passport.data.authority}}" bindinput="oninputAuthority" type="text"/>
          </view>
          <view wx:if="{{!!fields.issue_place_cn}}">
            <text class="fieldLabel">颁发地</text>
            <input placeholder="颁发地" value="{{passport.data.issue_place_cn}}" bindinput="oninputIssuePlaceCn" type="text"/>
          </view>
          <view wx:if="{{!!fields.issue_place}}">
            <text class="fieldLabel">颁发地(拼音)</text>
            <input placeholder="颁发地" value="{{passport.data.issue_place}}" bindinput="oninputIssuePlace" type="text"/>
          </view>
          <view wx:if="{{!!fields.issue_date}}">
            <picker mode="date" value="{{passport.data.issue_date}}" start="1980-01-01" end="2019-09-01" @change="bindDateChange">
              <view class="picker">
                <text class="fieldLabel">颁发日期 </text> {{issueDate}}
              </view>
            </picker>
          </view>
          <view wx:if="{{!!fields.expiry_date}}">
            <picker mode="date" value="{{passport.data.expiry_date}}" start="2019-01-01" end="2039-09-01" @change="bindExpiryChange">
              <view class="picker">
                <text class="fieldLabel">有效期至 </text>{{expiryDate}}
              </view>
            </picker>
          </view>
          <view wx:if="{{!!fields.passport_file}}">
            <image @tap="previewPassport" data-list="{{ [passportFile] }}" src="{{passportFile}}"/>
          </view>
        </view>
      </i-collapse-item>
      <i-collapse-item title="家庭信息">
        <view slot="content">
        <view wx:if="{{ !!fields.marital_status }}">
          <picker @change="bindMaritalStatusChange" value="{{maritalStatusIndex}}" range="{{maritalStatuses}}">
          <view class="picker">
            <text class="fieldLabel">婚姻状态 </text>{{maritalStatuses[maritalStatusIndex]}}
          </view>
          </picker>
          <view wx:if="{{maritalStatusIndex == 1 && !!fields.spouse_name}}">
            <view>
              <text class="fieldLabel">配偶的姓(拼音)</text>
              <input value="{{passport.data.spouse_name_sur}}" bindinput="oninputSpouseSurName" type="text"/>
            </view>
            <view>
              <text class="fieldLabel">配偶的名(拼音)</text>
              <input value="{{passport.data.spouse_name_given}}" bindinput="oninputSpouseGivenName" type="text"/>
            </view>
          </view>
        </view>
        <view wx:if="{{!!fields.father_name}}">
          <text class="fieldLabel">父亲的姓(拼音)</text>
          <input value="{{passport.data.father_name_sur}}" bindinput="oninputFatherSurName" type="text"/>
        </view>
        <view wx:if="{{!!fields.father_name}}">
          <text class="fieldLabel">父亲的名(拼音)</text>
          <input value="{{passport.data.father_name_given}}" bindinput="oninputFatherGivenName" type="text"/>
        </view>
        <view wx:if="{{!!fields.father_name_cn}}">
          <text class="fieldLabel">父亲的姓</text>
          <input value="{{passport.data.father_name_sur_cn}}" bindinput="oninputFatherSurNameCn" type="text"/>
        </view>
        <view wx:if="{{!!fields.father_name_cn}}">
          <text class="fieldLabel">父亲的名</text>
          <input value="{{passport.data.father_name_given_cn}}" bindinput="oninputFatherGivenNameCn" type="text"/>
        </view>
        <view wx:if="{{!!fields.mother_name}}">
          <text class="fieldLabel">母亲的姓(拼音)</text>
          <input value="{{passport.data.mother_name_sur}}" bindinput="oninputMotherSurName" type="text"/>
        </view>
        <view wx:if="{{!!fields.mother_name}}">
          <text class="fieldLabel">母亲的名(拼音)</text>
          <input value="{{passport.data.mother_name_given}}" bindinput="oninputMotherGivenName" type="text"/>
        </view>
        <view wx:if="{{!!fields.mother_name_cn}}">
          <text class="fieldLabel">母亲的姓</text>
          <input value="{{passport.data.mother_name_sur_cn}}" bindinput="oninputMotherSurNameCn" type="text"/>
        </view>
        <view wx:if="{{!!fields.mother_name_cn}}">
          <text class="fieldLabel">母亲的名</text>
          <input value="{{passport.data.mother_name_given_cn}}" bindinput="oninputMotherGivenNameCn" type="text"/>
        </view>
        <view wx:if="{{!!fields.region}}">
          <picker mode="region" @change="bindRegionChange" custom-item="全部">
            <text class="fieldLabel">住址城市 </text><view class="picker">{{regionDisplay}}</view>
          </picker>
        </view>
        <view wx:if="{{!!fields.address_cn}}">
          <text class="fieldLabel">详细地址</text>
          <input placeholder="" value="{{passport.data.address_cn}}" bindinput="oninputAddressCn" type="text"/>
        </view>
        <view wx:if="{{!!fields.address}}">
          <text class="fieldLabel">详细地址(英文)</text>
          <input placeholder="选填可空" value="{{passport.data.address}}" bindinput="oninputAddress" type="text"/>
        </view>
        <view wx:if="{{!!fields.phone}}">
          <text class="fieldLabel">电话号码</text>
          <input value="{{passport.data.phone}}" bindinput="oninputPhone" type="number"/>
        </view>
        <view wx:if="{{!!fields.email}}">
          <text class="fieldLabel">电子邮件</text>
          <input placeholder="" value="{{passport.data.email}}" bindinput="oninputEmail" type="text"/>
        </view>
        </view>
      </i-collapse-item>
      <i-collapse-item title="旅行信息">
        <view slot="content">
        <view wx:if="{{!!fields.destination}}">
          <picker bindchange="bindDestinationChange" range="{{destinations}}" range-key="name_cn">
        <view class="picker">
          <text class="fieldLabel">目的地   </text>{{destinationDisplay}}
        </view>
        </picker>
        </view>
        <view wx:if="{{!!fields.purpose}}">
          <picker bindchange="bindPurposeChange" value="{{application.purpose}}" range="{{purposes}}">
            <view class="picker">
              <text class="fieldLabel">旅行目的 </text>{{purposeDisplay}}
            </view>
          </picker>
        </view>
        <view wx:if="{{!!fields.entry_date}}">
          <picker mode="date" value="{{application.entry_date}}"  @change="bindEntryDateChange" start="{{today}}">
            <view class="picker">
              <text class="fieldLabel">入境日期 </text>{{entryDate}}
            </view>
          </picker>
        </view>
        <view wx:if="{{!!fields.departure_date}}">
          <picker mode="date" value="{{application.departure_date}}" @change="bindDepartureDateChange" start="{{departureDateStart}}">
            <view class="picker">
              <text class="fieldLabel">离境日期 </text>{{departureDate}}
            </view>
          </picker>
        </view>
        <view wx:if="{{!!fields.by}}">
          <picker bindchange="bindByChange" range="{{by}}">
          <view class="picker">
            <text class="fieldLabel">旅行方式 </text>{{byDisplay}}
          </view>
          </picker>
        </view>
        <view wx:if="{{!!fields.entry_point}}">
          <picker bindchange="bindEntryPointChange" range="{{entrypoints[application.data.by]}}" range-key="name_cn">
          <view class="picker">
            <text class="fieldLabel">入境点   </text>{{entryPointDisplay}}
          </view>
          </picker>
        </view>
        <checkbox-group wx:if="{{!!fields.return_to_domicile}}" bindchange="checkboxChangeReturnDomicile">
          <label>
            <checkbox value='return_to_domicile' checked="{{application.data.return_to_domicile}}" />
            旅行结束后你是否会回到自己的国家?
          </label>
        </checkbox-group>
        </view>
      </i-collapse-item>

      <i-collapse-item title="历史旅行记录">
        <view slot="content">
        <view>
          <view wx:if="{{!!fields.been_other_country}}">
            <checkbox-group bindchange="checkboxChangeBeenOtherCountry">
              <label>
                <checkbox value='been_other_country' checked="{{application.data.been_other_country}}" />
                最近三个月内是否去过其他国家?
              </label>
            </checkbox-group>
            <view wx:if="{{application.data.been_other_country}}">
              <input placeholder="国家名称" value="{{application.data.been_other_country_name}}" bindinput="oninputCountry" type="text"/>
              <picker mode="date" start="{{threeMonthAgo()}}" end="{{today()}}" @change="bind3EntryDateChange">
                <view class="picker">
                  入境日期: {{application.data.been_other_country_date}}
                </view>
              </picker>
              <picker mode="date" start="{{threeMonthAgo()}}" end="{{today()}}" @change="bind3DepartureDateChange">
                <view class="picker">
                  离境日期: {{application.data.been_other_country_departure_date}}
                </view>
              </picker>
            </view>
          </view>
          <view wx:if="{{!!fields.ever_been_to}}" class="container">
            <checkbox-group bindchange="checkboxChangeEverBeenTo">
              <label>
                <checkbox value='ever_been_to' checked="{{application.data.ever_been_to}}" />
                以前有没有来过此行的目的地国家?
              </label>
            </checkbox-group>
            <view wx:if="{{application.data.ever_been_to}}">
              <picker mode="date" end="{{today()}}" @change="bindEverEntryDateChange">
                <view class="picker">
                  入境日期: {{application.data.ever_been_to_date}}
                </view>
              </picker>
              <picker mode="date" end="{{today()}}" @change="bindEverDepartureDateChange">
                <view class="picker">
                  离境日期: {{application.data.ever_been_to_departure_date}}
                </view>
              </picker>
            </view>
          </view>
          <checkbox-group bindchange="checkboxChange" class="container">
            <label wx:if="{{!!fields.ever_denied}}">
              <checkbox value='ever_denied' checked="{{application.data.ever_denied}}" />
              有被此行的目的国家拒绝入境的经历吗?
            </label>
            <label wx:if="{{!!fields.ever_denied_by_others}}">
              <checkbox value='ever_denied_by_others' checked="{{application.data.ever_denied_by_others}}" />
              有被其他国家拒绝入境的经历吗?
            </label>
            <label wx:if="{{!!fields.ever_convicted}}">
              <checkbox value='ever_convicted' checked="{{application.data.ever_convicted}}" />
              有犯罪记录吗?
            </label>
          </checkbox-group>
        </view>
        </view>
      </i-collapse-item>

    </i-collapse>
    <view wx:if="{{!!fields.special}}">
      <button type="primary" class="visa_detail_bottom_btn" @tap="next">下一步</button>
    </view>
    <view wx:else>
      <button type="primary" @tap="submit">确定</button>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import api from '@/api/api'
  const env = require('../utils/config.js')
  import {
    SYSTEM_INFO,
    USER_SPECICAL_INFO,
    ADDRESS_ID
  } from '@/utils/constant';

  export default class FillForm extends wepy.page {
    config = {
      navigationBarTitleText: '填表',
      usingComponents: {
        'i-collapse': '../resources/iview/collapse/index',
        'i-collapse-item': '../resources/iview/collapse-item/index',
        Step: '../resources/iview/step/index',
        Steps: '../resources/iview/steps/index'
      }
    }
    components = {
    }
    data = {
      fields: [],
      passport: null,
      application: {},
      entrypoints: [],
      purposes: ['旅游', '商务', '教育', '前往工作', '求医', '宗教', '移民定居', '其他'],
      maritalStatuses: ['单身', '已婚', '离婚', '丧偶'],
      by: ['飞机', '陆路', '水路'],
      jobs: ['学生', '无业', '在职', '退休', '其他'],
    }
    computed = {
      maritalStatusIndex() {
        if (this.passport && this.passport.data.marital_status) {
          return this.passport.data.marital_status
        }
        return 0
      },
      birthDate() {
        if (this.passport) {
          return this.passport.data.birth_date
        }
        return ''
      },
      issueDate() {
        if (this.passport) {
          return this.passport.data.issue_date
        }
        return ''
      },
      expiryDate() {
        if (this.passport) {
          return this.passport.data.expiry_date
        }
        return ''
      },
      jobTypeDisplay() {
        if (this.passport && this.passport.data.job_type) {
          return this.jobs[this.passport.data.job_type]
        }
        return ''
      },
      regionDisplay() {
        if (this.passport && this.passport.data.region) {
          return this.passport.data.region[0] + ' ' + this.passport.data.region[1] + ' ' + this.passport.data.region[2]
        }
        return ''
      },
      purposeDisplay() {
        if (this.application.purpose) {
          return this.purposes[this.application.purpose]
        }
        return ''
      },
      entryDate() {
        if (this.application.data) {
          return this.application.entry_date
        }
        return ''
      },
      departureDate() {
        if (this.application.data) {
          return this.application.departure_date
        }
        return ''
      },
      byDisplay() {
        if (this.application.data && this.application.data.by) {
          return this.by[this.application.data.by]
        }
        return ''
      },
      entryPointDisplay() {
        if (this.application.data && this.application.data.entry_point) {
          return this.application.data.entry_point.name_cn
        }
        return ''
      },
      destinationDisplay() {
        if (this.application.data && this.application.data.destination) {
          return this.application.data.destination.name_cn
        }
        return ''
      },
      today() {
        return new Date().toJSON().slice(0, 10).replace(/-/g, '/')
      },
      departureDateStart() {
        if (this.application.entry_date) {
          return this.application.entry_date
        }
        return this.today
      },
      isAdmin() {
        return !!this.passport && this.passport.openid === env.adminOpenid
      },
      passportFile() {
        if (!this.passport) {
          return ''
        }
        return env.ossHost + '/' + this.passport.data.passport_file
      },
      photoFile() {
        if (!this.passport || !this.passport.data.photo_file) {
          return ''
        }
        return this.passport.data.photo_file
      },
      otherFile() {
        if (!this.passport || !this.passport.data.other_file) {
          return ''
        }
        return env.ossHost + '/' + this.passport.data.other_file
      },
      hotelLetter() {
        if (!this.passport || !this.passport.data.hotel_letter) {
          return ''
        }
        return env.ossHost + '/' + this.passport.data.hotel_letter
      },
      filesUrls() {
        var files = []
        if (this.photoFile) {
          files.push(this.photoFile)
        }
        if (this.otherFile) {
          files.push(this.otherFile)
        }
        if (this.hotelLetter) {
          files.push(this.hotelLetter)
        }
        return files
      }
    }

    methods = {
      oninputPassport(e) {
        this.passport.passport_no = e.detail.value
      },
      oninputAuthority(e) {
        this.passport.data.authority = e.detail.value
      },
      oninputIssuePlaceCn(e) {
        this.passport.data.issue_place_cn = e.detail.value
      },
      oninputIssuePlace(e) {
        this.passport.data.issue_place = e.detail.value
      },
      oninputNamecn(e) {
        this.passport.name_cn = e.detail.value
      },
      oninputName(e) {
        this.passport.name = e.detail.value
      },
      oninputNationality(e) {
        this.passport.data.country = e.detail.value
      },
      bindDateChange(e) {
        this.passport.data.issue_date = e.detail.value
      },
      bindExpiryChange(e) {
        this.passport.data.expiry_date = e.detail.value
      },
      bindMaritalStatusChange(e) {
        this.passport.data.marital_status = e.detail.value
      },
      bindBirthChange(e) {
        this.birth_date = e.detail.value
        this.passport.data.birth_date = e.detail.value
      },
      radioChange(e) {
        this.passport.data.sex = e.detail.value
      },
      onJobTypeChange(e) {
        this.passport.data.job_type = e.detail.value
      },
      onJobCompChange(e) {
        this.passport.data.job_comp_cn = e.detail.value
      },
      onJobTitleChangeCn(e) {
        this.passport.data.job_title_cn = e.detail.value
      },
      onJobTitleChange(e) {
        this.passport.data.job_title = e.detail.value
      },
      oninputFatherSurName(e) {
        this.passport.data.father_name_sur = e.detail.value
      },
      oninputFatherSurNameCn(e) {
        this.passport.data.father_name_sur_cn = e.detail.value
      },
      oninputSpouseSurName(e) {
        this.passport.data.spouse_name_sur = e.detail.value
      },
      oninputSpouseGivenName(e) {
        this.passport.data.spouse_name_given = e.detail.value
      },
      oninputFatherGivenName(e) {
        this.passport.data.father_name_given = e.detail.value
      },
      oninputFatherGivenNameCn(e) {
        this.passport.data.father_name_given_cn = e.detail.value
      },
      oninputMotherSurName(e) {
        this.passport.data.mother_name_sur = e.detail.value
      },
      oninputMotherSurNameCn(e) {
        this.passport.data.mother_name_sur_cn = e.detail.value
      },
      oninputMotherGivenName(e) {
        this.passport.data.mother_name_given = e.detail.value
      },
      oninputMotherGivenNameCn(e) {
        this.passport.data.mother_name_given_cn = e.detail.value
      },
      bindRegionChange(e) {
        console.log(e.detail.value)
        this.passport.data.region = e.detail.value
      },
      oninputAddressCn(e) {
        this.passport.data.address_cn = e.detail.value
      },
      oninputAddress(e) {
        this.passport.data.address = e.detail.value
      },
      oninputPhone(e) {
        this.passport.data.phone = e.detail.value
      },
      oninputEmail(e) {
        this.passport.data.email = e.detail.value
      },
      bindPurposeChange(e) {
        this.application.purpose = e.detail.value
      },
      bindEntryDateChange(e) {
        this.application.entry_date = e.detail.value
      },
      bindDepartureDateChange(e) {
        this.application.departure_date = e.detail.value
      },
      bindByChange(e) {
        this.application.data.by = e.detail.value
        this.application.data.entry_point = this.entrypoints[this.application.data.by][0]
      },
      bindEntryPointChange(e) {
        this.application.data.entry_point = this.entrypoints[this.application.data.by][e.detail.value]
      },
      checkboxChangeReturnDomicile(e) {
        this.application.data.return_to_domicile = e.detail.value.includes('return_to_domicile')
      },
      checkboxChangeBeenOtherCountry(e) {
        this.application.data.been_other_country = e.detail.value.includes('been_other_country')
      },
      checkboxChangeEverBeenTo(e) {
        this.application.data.ever_been_to = e.detail.value.includes('ever_been_to')
      },
      checkboxChange(e) {
        this.application.data.ever_been_to = e.detail.value.includes('ever_been_to')
        this.application.data.ever_denied = e.detail.value.includes('ever_denied')
        this.application.data.ever_denied_by_others = e.detail.value.includes('ever_denied_by_others')
        this.application.data.ever_convicted = e.detail.value.includes('ever_convicted')
      },
      oninputCountry(e) {
        this.application.data.been_other_country_name = e.detail.value
      },
      bind3EntryDateChange(e) {
        this.application.data.been_other_country_date = e.detail.value
      },
      bind3DepartureDateChange(e) {
        this.application.data.been_other_country_departure_date = e.detail.value
      },
      bindEverEntryDateChange(e) {
        this.application.data.ever_been_to_date = e.detail.value
      },
      bindEverDepartureDateChange(e) {
        this.application.data.ever_been_to_departure_date = e.detail.value
      }
    }
    previewPassport(event) {
      console.log(event)
      var src = event.currentTarget.dataset.src
      var imgList = event.currentTarget.dataset.list
      wx.previewImage({
        current: src,
        urls: imgList
      })
    }
    previewImages(event) {
      var src = event.currentTarget.dataset.src
      console.log(src)
      var imgList = this.filesUrls
      wx.previewImage({
        current: src,
        urls: imgList
      })
    }
    next() {
      wepy.setStorageSync('passport', this.passport)
      wepy.setStorageSync('application', this.application)
      wepy.redirectTo({
        url: "./special/" + this.fields.special
      })
    }
    async submit() {
      let that = this;

      console.log('saving passport:')
      console.log(this.passport)
      wepy.request({
        url: 'https://php.evisa100.com/save_passport.php',
        method: 'POST',
        data: this.passport,
        header: {
          'content-type': 'application/json; charset=UTF-8'
        }
      }).then(res => {
        console.log(res)
        if (res.data.id) {
          this.passport.id = res.data.id
        }
        this.application.passport_id = this.passport.id
        this.application.price = 999
        console.log('saving application:')
        console.log(this.application)
        wepy.request({
          url: 'https://php.evisa100.com/submit_application.php',
          method: 'POST',
          data: this.application,
          header: {
            'content-type': 'application/json; charset=UTF-8'
          }
        }).then(res => {
          console.log(res)
          if (res.data.id) {
            this.application.id = res.data.id
          }
          if (this.application.status <= 1) {
            wepy.redirectTo({
              url: '/pages/comfire_order?fee=' + that.application.price + "&applicationId=" + this.application.id
            })
          } else {
            if (this.application.status == 2 && this.isAdmin) {
              api.updateOrder({
                query: {
                  id: this.application.id,
                  status : 4
                },
                method: 'POST'
              }).then(res => {
                console.log('status updated to 4', that.applicationId, res);
              })
            }
            wepy.navigateBack()
          }
          wepy.clearStorage()
          console.log('clearStorage done')
        })
      })
    }

    async onLoad(option) {
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};

      let that = this
      if (option.id) {
        var json = await api.getApplicationList({
          query: {
            id: option.id
          }
        });
        this.application = json.data[0];

        console.log('application:')
        console.log(this.application)
        this.fields = env.getFields(this.application.data.to_country)
        this.entrypoints = env.getEntryPoints(this.application.data.to_country)

        json = await api.getPassportList({
          query: {
            id: this.application.passport_id
          }
        });
        this.passport = json.data[0];
        that.$apply()
        console.log('passport:')
        console.log(that.passport)
      } else {
        this.passport = wepy.getStorageSync('passport')
        var application = wepy.getStorageSync('application')
        if (application) {
          this.application = application
        }
        if (!this.application.data) {
          this.application.data = {}
          // default values.
          this.application.data.return_to_domicile = true
          this.application.data.been_other_country = false
          this.application.data.ever_been_to = false
          this.application.data.ever_denied = false
          this.application.data.ever_denied_by_others = false
          this.application.data.ever_convicted = false
        }
        if (option.country) {
          console.log('set country = ' + option.country)
          this.application.data.to_country = option.country
        }
        this.fields = env.getFields(this.application.data.to_country)
        this.entrypoints = env.getEntryPoints(this.application.data.to_country)
      }

      this.passport.openid = this.openid
      console.log('passport.openid set to ', this.openid);
    }
  }
</script>
